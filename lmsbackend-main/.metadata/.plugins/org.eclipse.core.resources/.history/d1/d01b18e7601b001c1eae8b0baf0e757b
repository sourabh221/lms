package com.app.controller.user;

import java.time.LocalDate;
import java.time.Period;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.OtherDto;
import com.app.dto.ResultDto;
import com.app.pojos.CheckOutBook;
import com.app.pojos.ReserveBookHistory;
import com.app.pojos.ReturnBook;
import com.app.pojos.User;
import com.app.service.ReturnBookServiceImpl;
import com.app.utils.UserUtils;

@RestController
@RequestMapping("/user/returnBook")
@CrossOrigin("http://localhost:3060")
public class UserReturnBookController {

	@Autowired
	ReturnBookServiceImpl returnBookServiceImpl;
	
	public UserReturnBookController() {
		System.out.println("in ctor of "+getClass().getName());
	}
	
	
	@PutMapping("/return-book-by-user")
	public ResponseEntity<?> returnBookByUser(@RequestBody OtherDto otherDto){
		System.out.println("in method of returnBookByUser of "+getClass().getName()+" "+otherDto.getId());
		ResultDto result=new ResultDto("error","something went wrong");
		try {
			int id=(Integer)otherDto.getId();
			ReturnBook returnBook=returnBookServiceImpl.getReturnBookById(id);
			if(returnBook!=null) {
				Period period=Period.between(returnBook.getLastDateToReturn(), LocalDate.now());
				Long fine=0l;
				fine =UserUtils.calculateFine(period.getDays());
				
				System.out.println("period= "+period.getDays());
				
				if(fine>0) {
					result.setData("please pay the fine first of rupee "+fine);
				}else {
				returnBook.setIsReturn(1);
				ReturnBook r1=returnBookServiceImpl.addReturnBook(returnBook);
				if(r1!=null) {
					result.setData("book issued successfully please wait for librarian action");
				}else {
					result.setData("while updating return ")
				}
				
				}
				
			}else {
				result.setData("return book id is invalid");
			}
			
		} catch (Exception e) {
			System.out.println("exception caught in returnBookByUser of "+getClass().getName());
			System.out.println(e.getMessage());
			result.setData(e.getMessage());
		}
		return ResponseEntity.ok(result);
	}
	
	
	

}
