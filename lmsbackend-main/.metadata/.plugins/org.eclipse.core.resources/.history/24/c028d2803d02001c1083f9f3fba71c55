package com.app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.EmailReceiverDto;
import com.app.dto.Email_UUID_dto;
import com.app.dto.LibraryDto;
import com.app.dto.ResultDto;
import com.app.dto.userDto;
import com.app.pojos.Address;
import com.app.pojos.Library;
import com.app.pojos.LibraryAddress;
import com.app.pojos.User;
import com.app.service.LibraryServiceImpl;

@RestController
@CrossOrigin("http://localhost:3040")
@RequestMapping("/library")
public class LibraryController {
	
	@Autowired
	public LibraryServiceImpl libraryServiceImpl;
	
	

	public LibraryController() {
		super();
		System.out.println("in ctor of " + getClass().getName());
	}

	@PostMapping("/signup")
	public ResponseEntity<?> addLibrary(@RequestBody LibraryDto lDto){
		System.out.println("in login function of "+getClass().getName()+" "+lDto.getEmail());
		System.out.println(lDto);
		ResultDto result=new ResultDto("error","something went wrong");
		try {
			Library lib=new Library(lDto.getLibraryName(),lDto.getEmail(),lDto.getPhone(),lDto.getPwd());
			LibraryAddress addr = new LibraryAddress(lDto.getBuildingName(), lDto.getColonyName(), lDto.getCity(), lDto.getState(),
					lDto.getPincode());
			lib.addAddress(addr);
			lib=libraryServiceImpl.AddLibrary(lib);
			if(lib!=null) {
				result.setStatus("success");
				result.setData(lib);
			}
		} catch (Exception e) {
			
		}
		
		return ResponseEntity.ok(result);
	}
	
	@PostMapping("/login")
	public ResponseEntity<?> loginUser(@RequestBody LibraryDto library) {
		System.out.println("in login function of "+getClass().getName()+" "+library.getEmail());
		ResultDto result=new ResultDto("error","something went wrong");
		try {
			Library lib=libraryServiceImpl.GetLibraryByEmailAndPwd(library.getEmail(), library.getPwd());
			if(lib!=null) {
				result.setStatus("success");
				result.setData(lib);
			}
			
			
		} catch (Exception e) {
			return ResponseEntity.ok(result);
		}
			
			
		return ResponseEntity.ok(result);
	}
	
	@GetMapping("/get-library")
	public ResponseEntity<?> getUserByEmailAndSerialNo(@RequestBody Email_UUID_dto email_UUID_dto){
		System.out.println("in get user by email and serialNo function of "+getClass().getName()+" "+email_UUID_dto.getEmail());
		ResultDto result=new ResultDto("error","user not found");
		try {
			Library lib=libraryServiceImpl.GetLibraryByEmailAndSerialNo(email_UUID_dto.getEmail(),email_UUID_dto.getSerialNo());
			
			if(lib!=null) {
				result.setStatus("success");
				result.setData(lib);
			}
		} catch (Exception e) {
			
		}
		return ResponseEntity.ok(result);
	}
	
	@PutMapping("/update-profile")
	public ResponseEntity<?> updateProfile(@RequestBody LibraryDto libraryDto) throws Exception {
		System.out.println("in update profile of "+getClass().getName());
		ResultDto result=new ResultDto("error","user not found");
		try {
			LibraryAddress addr=new LibraryAddress(libraryDto.getBuildingName(),libraryDto.getColonyName(),libraryDto.getCity(),libraryDto.getState(),libraryDto.getPincode());
			Library lib=new Library();
			lib.setPhone(libraryDto.getPhone());
			lib.setEmail(libraryDto.getEmail());
			
			lib.setSerialNo(libraryDto.getSerialNo());
		} catch (Exception e) {
			
		}
		return ResponseEntity.ok(result);
	}
}
