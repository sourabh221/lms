package com.app.controller.user;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.BookDto;
import com.app.dto.ResultDto;
import com.app.pojos.Book;
import com.app.pojos.Library;
import com.app.pojos.LibraryBookDetails;
import com.app.pojos.LibraryBookId;
import com.app.pojos.ReserveBook;
import com.app.pojos.User;
import com.app.service.BookServiceImpl;
import com.app.service.LibraryBookDetailsServiceImpl;
import com.app.service.LibraryServiceImpl;
import com.app.service.UserServiceImpl;

@RestController
@RequestMapping("/user/reserveBook")
@CrossOrigin("http://localhost:3060")
public class UserReserveBookController {

	@Autowired
	UserServiceImpl userServiceImpl;
	
	@Autowired
	BookServiceImpl bookServiceImpl;
	
	@Autowired
	LibraryServiceImpl libraryServiceImpl;
	
	@Autowired
	LibraryBookDetailsServiceImpl libraryBookDetailsServiceImpl;
	
	public UserReserveBookController() {
		System.out.println("in ctor of "+getClass().getName());
	}

	@PostMapping("/add-reservation")
	public ResponseEntity<?> addBookReservation(@RequestBody BookDto bookDto){
		System.out.println("in addBookReservation method of "+getClass().getName()+" "+bookDto.getUserId());
		ResultDto result=new ResultDto("error","something went wrong");
		try {
			if(bookDto.getBookId()!=null && bookDto.getLibraryId()!=null&&bookDto.getUserId()!=null) {
				User u=userServiceImpl.getUserBySerialNo(bookDto.getUserId());
				if(u!=null) {
					Library lib=libraryServiceImpl.GetLibraryBySerialNo(bookDto.getLibraryId());
					if(lib!=null) {
						Book book=bookServiceImpl.getBySerialNo(bookDto.getBookId());
						if(book!=null) {
							LibraryBookDetails bookDetails=libraryBookDetailsServiceImpl.getByLibraryBookId(new LibraryBookId(book.getId(),lib.getLibraryId()));
							if(bookDetails!=null) {
								ReserveBook reservation=new ReserveBook();
								reservation.setPeriod(bookDto.getPeriod());
								u.addReservation(reservation);
								bookDetails.addReservation(reservation);
								LibraryBookDetails lbd=libraryBookDetailsServiceImpl.addBook(bookDetails);
								if(lbd!=null) {
									
								}else {
									result.setData("while adding reservation something went wrong");
								}
							}else {
								result.setData("library book details is not found");
							}
						}else {
							result.setData("book is not found");
						}
					}else {
						result.setData("library is not found");
					}
				}else {
					result.setData("user is not found");
				}
			}else {
				result.setData("given information is insufficient");
			}
		} catch (Exception e) {
			System.out.println("exception caught in addBookReservation of "+getClass().getName());
			System.out.println(e.getMessage());
			result.setData(e.getMessage());
		}
		return ResponseEntity.ok(result);
	}
	
	public void getAllReservations(LibraryBookDetails lbd) {
		System.out.println("in getAllReservations method of "+getClass().getName()+" "+lbd.getLibrary().getLibraryName());
		try {
			
		} catch (Exception e) {
			System.out.println("exception caught in getAllReservations of "+getClass().getName());
			System.out.println(e.getMessage());
			
		}
	}
}
