package com.app.pojos;

import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonManagedReference;

@Entity
@Table(name="reserve_book_tbl")
@JsonInclude(Include.NON_DEFAULT)
public class ReserveBook {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@JsonProperty("reservation_id")
	private int reservationId;
	@Column(name="reservation_date")
	@JsonProperty("date")
	private LocalDate reservationDate=LocalDate.now();
	private int period;
	@JsonProperty("active")
	@Column(name="reservation_active")
	private int active=0;
	//@JsonBackReference
	@ManyToOne
	@JoinColumn(name="user_id",nullable = false)
	private User user;
	@JsonManagedReference
	@OneToMany(mappedBy = "book",cascade = CascadeType.ALL,fetch = FetchType.LAZY)
	private Set<LibraryBookDetails> bookDetails=new  HashSet<LibraryBookDetails>();
	public ReserveBook() {
		System.out.println("in constructor of "+getClass().getName());
	}
	
	

}
