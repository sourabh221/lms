package com.app.controller.user;

import java.util.List;

import org.hibernate.annotations.Check;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.OtherDto;
import com.app.dto.ResultDto;
import com.app.pojos.CheckOutBook;
import com.app.pojos.CheckOutBookHistory;
import com.app.pojos.ReserveBookHistory;
import com.app.pojos.User;
import com.app.service.CheckOutBookServiceImpl;
import com.app.service.ReserveBookHistoryServiceImpl;


@RestController
@RequestMapping("/user/checkOutBook")
@CrossOrigin("http://localhost:3060")
public class UserCheckOutBookController {
	
	@Autowired
	CheckOutBookServiceImpl checkOutBookServiceImpl;
	
	@Autowired
	ReserveBookHistoryServiceImpl reserveBookHistoryServiceImpl;
	
	public UserCheckOutBookController() {
		System.out.println("in ctor of "+getClass().getName());
	}

	
	@PutMapping("/check-out-by-user")
	public ResponseEntity<?> checkOutBookByUser(@RequestBody OtherDto otherDto){
		System.out.println("in method of checkOutBookByUser of "+getClass().getName()+" "+otherDto.getId());
		ResultDto result=new ResultDto("error","something went wrong");
		try {
			int id=(Integer)otherDto.getId();
			CheckOutBook c=checkOutBookServiceImpl.getCheckOutBookById(id);
			if(c!=null) {
				c.setUserCheckedOut(1);
				CheckOutBook c1=checkOutBookServiceImpl.addCheckOutBook(c);
				if(c1!=null) {
					result.setData("book checked out successfully");
					result.setStatus("success");
				}else {
					result.setData("something went wrong while checking out");
				}
			}else {
				result.setData("check out book id is invalid");
			}
		} catch (Exception e) {
			System.out.println("exception caught in checkOutBookByUser of "+getClass().getName());
			System.out.println(e.getMessage());
			result.setData(e.getMessage());
		}
		return ResponseEntity.ok(result);
	}
	
	
	@PutMapping("/delete-check-out-book")
	public ResponseEntity<?> deleteCheckOutBook(@RequestBody OtherDto otherDto){
		System.out.println("in method of deleteCheckOutBook of "+getClass().getName()+" "+otherDto.getId());
		ResultDto result=new ResultDto("error","something went wrong");
		try {
			int id=(Integer)otherDto.getId();
			CheckOutBook c=checkOutBookServiceImpl.getCheckOutBookById(id);
			if(c!=null) {
				c.getReservationHistory().getBookDetails().setAvailableBooks(c.getReservationHistory().getBookDetails().getAvailableBooks()+1);
				CheckOutBook c1=checkOutBookServiceImpl.addCheckOutBook(c);
				if(c1!=null) {
					
					ReserveBookHistory history=c1.getReservationHistory();
					history.addCheckOutBookHistory(new CheckOutBookHistory(c1.getId(), false));
					ReserveBookHistory h1=reserveBookHistoryServiceImpl.addReserBookHistory(history);
					if(h1!=null) {
						checkOutBookServiceImpl.deleteCheckOutBook(id);
						result.setData("record deleted success");
						result.setStatus("success");
					}else {
						result.setData("something went wrong while adding the checkout book history");
					}
					
				}else {
					result.setData("something went wrong while updating library bookdetails availablebooks");
				}
			}else {
				result.setData("check out book id is invalid");
			}
		} catch (Exception e) {
			System.out.println("exception caught in deleteCheckOutBook of "+getClass().getName());
			System.out.println(e.getMessage());
			result.setData(e.getMessage());
		}
		return ResponseEntity.ok(result);
	}
}
